// https://leetcode.com/problems/successful-pairs-of-spells-and-potions/
// Medium

class Solution {
public:
    vector<int> successfulPairs(vector<int>& spells, vector<int>& potions, long long success) {
        constexpr int n = 1e5+1;
        std::array<int, n> potions_strength_count{};
        for (int potion_strength : potions) {
            ++potions_strength_count[potion_strength];
        }
        std::partial_sum(potions_strength_count.rbegin(), potions_strength_count.rend(), potions_strength_count.rbegin());
        std::vector<int> pairs; pairs.reserve(spells.size());
        for (int spell_strength : spells) {
            long long min_potion_strength = success / spell_strength;
            min_potion_strength += spell_strength*min_potion_strength < success;
            pairs.push_back(min_potion_strength >= potions_strength_count.size()
                ? 0
                : potions_strength_count[min_potion_strength]
            );
        }
        return pairs;
    }
};

class Solution {
public:
    vector<int> successfulPairs(vector<int>& spells, vector<int>& potions, long long success) {
        std::sort(potions.begin(), potions.end());
        std::vector<int> pairs; pairs.reserve(spells.size());
        auto it = potions.end();
        for (int spell_strength : spells) {
            long long min_potion_strength = success / spell_strength;
            if (min_potion_strength*spell_strength == success) {
                it = std::lower_bound(potions.begin(), potions.end(), min_potion_strength);
            } else {
                it = std::upper_bound(potions.begin(), potions.end(), min_potion_strength);
            }
            pairs.push_back(std::distance(it, potions.end()));
        }
        return pairs;
    }
};

class FirstSolution {
public:
    vector<int> successfulPairs(vector<int>& spells, vector<int>& potions, long long success) {
        std::sort(potions.begin(), potions.end());
        std::vector<int> pairs; pairs.reserve(spells.size());
        for (int spell_strength : spells) {
            auto it = std::lower_bound(potions.begin(), potions.end(), success / spell_strength);
            pairs.push_back(std::distance(it, potions.end()));
            if (it != potions.end() && (long long) spell_strength*(*it) < success) {
                pairs.back() -= std::distance(
                    it,
                    std::find_if(it, potions.end(), [it] (int n) { return n != *it;})
                );
            }
        }
        return pairs;
    }
};

/*
Test data:
[5,1,3]
[1,2,3,4,5]
7
[3,1,2]
[8,5,8]
16
[15,8,19]
[38,36,23]
328
[13,22,21,13,11,9,13,35,7,38,10,10,38,19,3,16,13,24,16,27,20,24,32,5,16,35,24,2,25,32,20,22,22,3,35,39,27,26,25,21,27,40,15,17,24,40,35,27,20,40,9,35,27,19,15,34,35,37,17,40,8,3,33,39,29,22,30,1,37,2,16,30,32,31,24,6,34,26,36,4,21,2,29,31,3,27,6,24,40,18]
[33,16,35,14,26,23,23,2,37,23,15,20,25,34,23,29,4,18,26,24,16,37,15,11,33,24,12,13,7,24,3,26,1,3,38,33,19,3,34,22,30,39,18,7,21,4,33,18,39,5,34,14,32,5,20,22,5,25,15]
533
[547,324,499,733,467,218,872,539,297,57,67,294,652,864,833,88,45,401,923,926,700,106,115,450,172,625,672,575,29,950,393,360,123,919,671,531,766,643,883,737,721,223,781,540,753,902,322,680,457,580,353,233,574,309,819,965,339,676,502,543,808,447,315,667,915,274,676,391,787,717,5,995,758,737,806,250,274,885,364,435,935,421,221,234,640,202,977,811,711,465,353,211,513,276,234,506,260,355,342,336,51,670,62,107,507,582,573,669,864,521,311,172,953,972,702,701,543,761,980,135,807,265,329,249,809,164,35,541,796,662,859,911,901,700,456,705,283,508,672,311,188,587,868,730,690,43,704,492,287,558,378,112,80,621,974,142,717,908,670,831,267,791,477,632,689,623,842,784,45,595,337,2,627,919,655,134,330,125,799,66,240,399,632,599,432,472,440,585,339,119,639,677,451,393,153,551,434,541,511,314,803,802,766,536,791,126,386,356,274,288,554,707,390,740,608,279,573,822,458,609,147,528,830,583,900,260,756,381,729,896,349,482,584,823,180,375,142,27,851,386,628,418,103,719,868,760,927,860,28,484,414,953,594,462,307,240,312,411,357,532,527,434,354,333,469,60,683,842,742,600,34,467,957,562,117,345,717,453,7,181,883,199,147,64,453,981,597,342,61,189,108,90,858,533,834,514,23,996,194,808,387,834,34,638,125,766,197,457,761,860,632,101,856,988,637,744,424,487,686,141,150,582,987,159,383,697,483,994,997,251,426,803,214,183,318,289,617,961,824,38,30,550,872,656,641,248,670,928,778,521,277,113,520,260,318,854,515,847,109,366,669,384,969,976,945,129,317,171,131,769,601,671,69,592,33,459,372,312,2,241,676,530,770,514,974,766,435,54,235,446,585,258,118,397,91,824,795,751,274,510,907,60,821,832,131,688,545,747,374,498,397,16,379,882,864,320,280,554,649,105,402,287,121,942,448,98,358,884,27,489,245,173,353,184,432,383,437,235,211,665,54,655,199,908,546,611,744,280,62,668,101,931,458,873,714,463,84,974,796,521,33,802,476,16,852,498,278,933,89,309,641,991,802,628,12,574,743,183,700,544,282,176,100,899,23,707,34,687,237,404,916,555,858,587,308,104,92,398,208,815,777,881,732,279,879,702,647,213,960,162,557,685,406,77,351,427,591,182,500,938,304,357,522,767,942,152,891,804,190,75,74,838,366,717,543,474,990,474,984,568,209,159,798,17,348,707,769,47,307,452,396,820,925,754,323,18,26,307,2,738,463,226,274,314,331,431,915,641,535,936,12,852,196,428,267,962,265,459,624,443,862,40,883,818,883,19,628,533,267,601,105,48,663,777,488,604,957,146,123,131,320,629,250,626,130,417,558,992,446,468,216,237,676,948,269,359,604,804,285,271,946,818,893,327,197,864,305,3,132,722,721,842,428,457,716,309,621,138,615,634,138,659,442,726,577,411,502,809,840,290,860,155,895,552,716,61,933,336,682,144,512,314,270,652,176,636,280,866,171,611,554,788,381,336,184,846,100,248,678,999,479,588,516,226,441,158,627,770,488,284,405,133,225,989,274,916,606,595,655,35,343,885,340,659,954,114,936,353,923,508,882]
[584,551,858,57,417,18,630,767,214,666,279,858,536,494,625,701,265,58,79,793,334,833,320,259,485,133,676,373,878,801,424,881,826,974,436,63,191,410,54,957,446,412,784,48,91,21,894,89,244,992,304,597,102,877,107,959,970,703,590,306,760,102,704,48,539,588,218,672,203,192,589,373,659,102,167,579,306,564,363,61,497,833,76,262,781,464,717,982,195,722,99,932,32,861,440,721,534,898,949,866,168,942,707,495,159,56,963,837,432,883,749,582,676,915,204,425,583,508,87,182,8,714,736,454,431,738,944,865,966,531,137,18,438,330,62,361,75,713,308,912,43,182,712,858,347,150,105,204,113,313,490,187,815,976,765,956,836,956,528,228,972,251,566,827,599,582,87,390,146,567,537,639,402,565,591,942,445,149,691,582,894,781,450,836,330,569,217,193,626,105,994,554,165,7,725,867,311,844,937,77,708,567,640,74,713,362,970,483,661,572,208,646,273,907,14,298,393,691,534,654,663,271,837,664,591,246,77,903,919,475,787,1,987,117,20,981,953,683,188,205,216,799,617,608,297,476,503,113,713,281,950,881,771,168,885,298,676,916,951,237,923,25,128,50,855,734,773,149,728,776,161,109,260,509,804,375,934,707,496,722,314,256,506,244,436,706,287,442,910,243,22,988,401,584,79,637,370,206,278,11,689,920,803,787,762,619,704,10,132,757,573,26,748,907,851,555,45,904,23,329,105,913,329,632,600,756,963,91,974,627,75,76,515,427,163,220,897,435,819,23,182,266,451,853,894,47,48,78,961,163,590,940,844,238,42,714,195,31,880,798,102,440,733,770,708,355,464,110,120,699,647,373,338,324,818,749,61,961,574,353,334,806,965,845,552,550,806,906,782,917,650,313,186,175,370,12,860,728,76,433,99,109,888,858,987,591,378,335,602,275,380,893,748,666,100,478,547,407,34,649,816,582,764,411,699,944,150,328,557,463,214,589,130,318,167,73,814,420,509,456,898,620,721,984,591,619,326,830,454,78,721,995,611,88,985,421,708,405,553,767,579,162,567,226,142,60,372,617,353,237,62,971,571,604,487,847,834,404,526,450,21,569,722,831,419,238,748,67,43,742,728,300,338,631,949,934,412,305,208,847,391,967,689,503,188,942,859,567,330,853,267,733,418,28,813,73,563,413,264,141,461,248,354,56,417,597,522,778,239,123,155,30,875,54,891,573,943,788,99,244,293,91,382,334,663,968,920,428,736,805,88,146,581,713,5,827,63,24,32,781,513,717,652,282,952,643,838,39,173,846,475,701,98,151,925,795,894,855,96,290,221,45,660,844,701,168,798,685,34,325,440,225,31,360,227,92,54,548,704,209,16,114,655,856,83,611,782,664,238,662,685,776,733,433,673,53,352,599,400,319,125,189,664,130,340,77,831,463,657,953,832,541,846,730,162,430,59,47,923,740,755,891,389,488,890,321,385,463,904,333,583,756,552,61,153,163,178,514,439,619,125,221,501,797,823,621,846,746,332,294,95,598,336,470,653,161,427,992,388,75,672,149,1,653,651,606,35,93,348,12,936,574,747,27,262,521,989,858,167,513,915,450,414,330,463,170,372,252,298,718,673,740,184,477,730,424,903,849,869,893,540,349,818,555,28,948,561,263,89,619,899,484,650,938,939,676,459,875,118,867,787,381,655,257,912,907,797,546,966,196,622,786,176,572,515,443,206,700,402,877,740,855,978,203,44,691,439,15,751,987,714,18,242,104,793,597,238,217,367,820,255,196,467,427,848,246,675,447,484,612,738,418,1000,378,886,633,387,203,417,248,896,235,164]
395758
*/
